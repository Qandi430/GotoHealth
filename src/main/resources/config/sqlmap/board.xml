<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.mlec.repository.mapper.BoardMapper">

	<!-- tb_board -->
	<resultMap type="Board" id="boardMap">
		<result column="no" property="no" />
		<result column="type" property="type" />
		<result column="category" property="category" />
		<result column="title" property="title" />
		<result column="writer" property="writer" />
		<result column="content" property="content" />
		<result column="reg_date" property="regDate" />
		<result column="view_cnt" property="viewCnt" />
		<result column="ref" property="ref" />
		<result column="parent_no" property="parentNo" />
		<result column="commentCnt" property="commentCnt" />
		<result column="rnum" property="rowNum" />
	</resultMap>
	
	<!-- tb_commentd -->
	<resultMap type="Comment" id="commentMap">
		<result column="comment_no" property="commentNo" />
		<result column="no" property="no" />
		<result column="content" property="content" />
		<result column="writer" property="writer" />
		<result column="reg_date" property="regDate" />
	</resultMap>
	
	<!-- tb_board_File -->
	<resultMap type="BoardFile" id="boardFileMap">
		<result column="file_no" property="fileNo" />
		<result column="no" property="no" />
		<result column="file_ori" property="fileOri" />
		<result column="file_sys" property="fileSys" />
		<result column="path" property="path" />
		<result column="file_size" property="fileSize" />
	</resultMap>
	
	<!-- tb_recom -->
	<resultMap type="Recom" id="recomMap">
		<result column="id" property="id" />
		<result column="no" property="no" />
	</resultMap>
<!--  	
	게시물 전체 목록 가져오기
	<select id="selectBoardAllList" resultMap="boardMap">
		select *
		  from tb_board
		 order by no desc
	</select>
	 -->
	 
	<!-- 게시물 전체 목록 가져오기 -->
	<select id="selectBoardAllList" parameterType="Board" resultMap="boardMap">
	    select *
	    from(
	        select rownum rnum, a.*
	          from(select b.*
	                  from tb_board b
	                 where type = #{type}
	         order by reg_date desc) a)
	    where rnum between #{startRow} and #{endRow}
	</select>
	
	<!-- 게시물 전체 목록 가져오기(category) -->
	<select id="selectBoardAllList2" parameterType="Board" resultMap="boardMap">
	    select *
	    from(
	        select rownum rnum, a.*
	          from(select b.*
	                  from tb_board b
	                 where category = #{category}
	         order by reg_date desc) a)
	    where rnum between #{startRow} and #{endRow}
	</select>

	<!-- 글개수 가져오기(type) -->
	<select id="boardCnt" parameterType="string" resultType="int">
		select count(*) from tb_board 
	      where type = #{type}
	</select>
	
	<!-- 글개수 가져오기(category) -->
	<select id="boardCategoryCnt" parameterType="string" resultType="int">
		select count(*) from tb_board 
	      where category = #{category}
	</select>
	
	<!-- 게시글 조회하기 -->
	<select id="selectBoardByNo" parameterType="int" resultMap="boardMap">
		select *
		  from tb_board
		 where no = #{no}
	</select>
	 
	<!-- 게시물 등록하기 -->
	<insert id="insertBoard" parameterType="Board">
		insert into tb_board(
			no, type, category, title, writer, content
		) values (
			s_board_no.nextval, #{type}, #{category}, #{title}, #{writer}, #{content}
		)
	</insert>
	
	<!-- 게시물 수정하기 -->
	<update id="updateBoard" parameterType="Board">
		update tb_board
		   set title = #{title}, content = #{content}
		 where no = #{no}
	</update>
	
	<!-- 조회수 수정하기 -->
	<update id="viewCntUpdate" parameterType="int">
		update tb_board
		   set view_cnt = view_cnt + 1
		 where no = #{no}
	</update>
	
	<!-- 게시물 삭제하기 -->
	<delete id="deleteBoard" parameterType="int">
		delete tb_board
		 where no = #{no}
	</delete>
	
</mapper>